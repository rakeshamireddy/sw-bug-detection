paste(directory, "analysis.R")
paste(directory, "analysis.R", sep="")
source("analysis.R")
ttest("Accuracy/")
source("analysis.R")
ttest("Accuracy/")
datasets <- ttest("Accuracy/")
datasets[0]
NaiveBayes <- read.table(paste(directory, "NaiveBayes.txt", sep=""), sep="\t", header=TRUE)
NeuralNet <- read.table(paste(directory, "NeuralNet.txt", sep=""), sep="\t", header=TRUE)
SVM <- read.table(paste(directory, "SVM.txt", sep=""), sep="\t", header=TRUE)
LogisticRegression <- read.table(paste(directory, "LogisticRegression.txt", sep=""), sep="\t", header=TRUE)
KNearest <- read.table(paste(directory, "KNearest.txt", sep=""), sep="\t", header=TRUE)
MixtureModel <- read.table(paste(directory, "MixtureModel.txt", sep=""), sep="\t", header=TRUE)
directory <- "Accuracy/"
NaiveBayes <- read.table(paste(directory, "NaiveBayes.txt", sep=""), sep="\t", header=TRUE)
NeuralNet <- read.table(paste(directory, "NeuralNet.txt", sep=""), sep="\t", header=TRUE)
SVM <- read.table(paste(directory, "SVM.txt", sep=""), sep="\t", header=TRUE)
LogisticRegression <- read.table(paste(directory, "LogisticRegression.txt", sep=""), sep="\t", header=TRUE)
KNearest <- read.table(paste(directory, "KNearest.txt", sep=""), sep="\t", header=TRUE)
MixtureModel <- read.table(paste(directory, "MixtureModel.txt", sep=""), sep="\t", header=TRUE)
SVM
datasets <- ttest("Accuracy/")
datasets
datasets[[0]]
datasets[[1]]
datasets[1
]
mylist <- list(SVM, NaiveBays)
mylist <- list(SVM, NaiveBayes)
mylist
ttest("Accuracy/")
datasets <- ttest("Accuracy/")
datasets
source("analysis.R")
datasets <- ttest("Accuracy/")
datasets
source("analysis.R")
datasets <- ttest("Accuracy/")
datasets
t.test(NaiveBayes[1],NeuralNet[1])
NaiveBayes
NaiveBayes$PC.1
t.test(NaiveBayes$PC.1,NeuralNet$PC.1)
mean(NaiveBayes$PC.1)
t.test(NaiveBayes$PC.1,NeuralNet$PC.1)
t.test(NaiveBayes$PC.2,NeuralNet$PC.2)
t.test(NaiveBayes$PC.3,NeuralNet$PC.3)
t.test(NaiveBayes$PC.4,NeuralNet$PC.4)
t.test(NaiveBayes$PC.5,NeuralNet$PC.5)
t.test(MixtureModel$PC.1,NaiveBayes$PC.1)
t.test(MixtureModel[1],NaiveBayes[1])
t.test(MixtureModel$PC.2,NaiveBayes$PC.2)
t.test(MixtureModel$PC.3,NaiveBayes$PC.3)
t.test(MixtureModel$PC.4,NaiveBayes$PC.4)
t.test(MixtureModel$PC.5,NaiveBayes$PC.5)
SVM$PC.1
NeuralNetwork$PC.1
NeuralNet$PC.1
datasets
SVM$PC.1
NeuralNetwork$PC.1
NeuralNet$PC.1
SVM$PC.1
datasets[[0]][1]
datasets[[1]][1]
datasets[[1]][2]
datasets[[1]][1]
list(datasets[[1]][1],datasets[[2]][1],datasets[[3]][1],datasets[[4]][1],datasets[[5]][1],datasets[[6]][1])
mylist <- list(datasets[[1]][1],datasets[[2]][1],datasets[[3]][1],datasets[[4]][1],datasets[[5]][1],datasets[[6]][1])
matrix(unlist(mylist), nrow=6)
datasets[[1]][1]
matrix(unlist(mylist), nrow=10)
datasets[[1]][1]
datasets[[2]][1]
matrix(unlist(mylist), nrow=10)
PC1 <- data.frame(matrix(unlist(mylist), nrow=10))
mylist <- list(datasets[[1]][1],datasets[[2]][1],datasets[[3]][1],datasets[[4]][1],datasets[[5]][1],datasets[[6]][1])
testlist <- list()
testlits[1] = 5
testlist[1] = 5
testlist[3] = 5
testlist
source("analysis.R")
gtPCData("Accuracy/")
getPCData("Accuracy/")
source("analysis.R")
getPCData("Accuracy/")
source("analysis.R")
getPCData("Accuracy/")
?data.frame
getPCData("Accuracy/")
source("analysis.R")
getPCData("Accuracy/")
source("analysis.R")
getPCData("Accuracy/")
source("analysis.R")
getPCData("Accuracy/")
source("analysis.R")
getPCData("Accuracy/")
source("analysis.R")
getPCData("Accuracy/")
source("analysis.R")
getPCData("Accuracy/")
source("analysis.R")
getPCData("Accuracy/")
mylist <- getPCData("Accuracy/")
matrix(unlist(mylist), nrow=5)
mylist
PCData <- getPCData("Accuracy/")
PCData$1
PC1 <- PCData[1]
PC2 <- PCData[2]
PC3 <- PCData[3]
PC4 <- PCData[4]
PC5 <- PCData[5]
PC1
PC2
PC1
?lapply
PC1[1:2,]
PC1[1:2,1]
PC1[1:2]
PC1
PC1 <- PC1[[1]]
PC1
PC2 <- PC2[[1]]
PC3 <- PC3[[1]]
PC4 <- PC4[[1]]
PC5 <- PC5[[1]]
PC1
PC1[1:2,]
lapply(PC1[1:10,], mean)
mean(PC1$MixtureModel)
lapply(PC1, mean)
PC1Means <- lapply(PC1, mean)
PC2Means <- lapply(PC2, mean)
PC3Means <- lapply(PC3, mean)
PC4Means <- lapply(PC4, mean)
PC5Means <- lapply(PC5, mean)
PC2Means
PC3Means
PC4Means
PC5Means
PC1Means
source("analysis.R")
source("analysis.R")
calculateResiduals(PC1,PC1Means)
PC1[,1]
PC1Means[1]
PC1Means
PC1Means[[1]]
source("analysis.R")
source("analysis.R")
calculateResiduals(PC1,PC1Means)
PC1[1,1]
PC1Means[[1]]
PC1[1,1] - PC1Means[[1]]
source("analysis.R")
calculateResiduals(PC1,PC1Means)
PC1Resid <- calculateResiduals(PC1,PC1Means)
list(PC1Resid)
unlist(PC1Resid)
as.vector(PC1Resid,mode='numeric')
as.vector(PC1Resid[1:10,],mode='numeric')
as.vector(PC1Resid)
hist(PC1Resid)
hist(as.numeric(PC1Resid))
hist(as.numeric(PC1Resid[,1]))
source("analysis.R")
convertToVector(PC1Resid)
PC1Residuals <- convertToVector(PC1Resid)
PC1Residuals
dim(PC1Residuals)
length(PC1Residuals)
hist(PC1Residuals)
PC[1]
PCData[1]
PCData[[1]]
?hist
source("analysis.R")
source("analysis.R")
plotResiduals("Acurracy/",1)
plotResiduals("Accurracy/",1)
plotResiduals("Accuracy/",1)
source("analysis.R")
plotResiduals("Accuracy/",1)
source("analysis.R")
plotResiduals("Accuracy/",1)
plotResiduals("Accuracy/",2)
plotResiduals("Accuracy/",3)
plotResiduals("Accuracy/",4)
plotResiduals("Accuracy/",5)
plotResiduals("Accuracy/",6)
plotResiduals("Accuracy/",5)
plotResiduals("F1/",5)
pc <- getPCData(directory)
df <- pc[[dataset]]
means <- lapply(df, mean)
resid <- calculateResiduals(df, means)
residuals <- convertToVector(resid)
hist(residuals, main = paste("PC", dataset, " Residuals", sep=""))
dataset <- 2
pc <- getPCData(directory)
df <- pc[[dataset]]
means <- lapply(df, mean)
resid <- calculateResiduals(df, means)
residuals <- convertToVector(resid)
hist(residuals, main = paste("PC", dataset, " Residuals", sep=""))
df
PC2
PC1
means
PC1Resid
resid
residuals
convertToVector(resid)
resid
resid[,1]
means[[1]] - resid[,1]
means
resid[,1]
means[[1]] - df[,1]
source("analysis.R")
plotResiduals("Accuracy/",5)
plotResiduals("Accuracy/",4)
df
means
convertToVector(resid)
source("analysis.R")
plotResiduals("Accuracy/",5)
plotResiduals("Accuracy/",4)
plotResiduals("Accuracy/",3)
plotResiduals("Accuracy/",2)
plotResiduals("Accuracy/",1)
residuals <- convertToVector(resid)
residuals
hist(residuals)
dataset <- 4
pc <- getPCData(directory)
df <- pc[[dataset]]
means <- lapply(df, mean)
resid <- calculateResiduals(df, means)
residuals <- convertToVector(resid)
hist(residuals, main = paste("PC", dataset, " Residuals", sep=""))
plotResiduals("F1/",1)
plotResiduals("F1/",2)
plotResiduals("F1/",3)
plotResiduals("F1/",3)
source("analysis.R")
plotResiduals("F1/",3)
plotResiduals("F1/",4)
plotResiduals("F1/",1)
source("analysis.R")
plotResiduals("F1/",1)
plotResiduals("F1/",2)
source("analysis.R")
plotResiduals("F1/",2)
plotResiduals("F1/",1)
source("analysis.R")
plotResiduals("F1/",2)
plotResiduals("F1/",1)
source("analysis.R")
plotResiduals("F1/",2)
plotResiduals("F1/",1)
plotResiduals("F1/",2)
plotResiduals("F1/",3)
plotResiduals("F1/",4)
plotResiduals("F1/",5)
plotResiduals("Accuracy/",5)
plotResiduals("Accuracy/",1)
plotResiduals("Accuracy/",2)
plotResiduals("Accuracy/",3)
plotResiduals("Accuracy/",4)
plotResiduals("Accuracy/",5)
plotResiduals("Accuracy/",4)
plotResiduals("Accuracy/",4)
source("analysis.R")
plotResiduals("Accuracy/",4)
source("analysis.R")
plotResiduals("Accuracy/",4)
source("analysis.R")
plotResiduals("Accuracy/",4)
plotResiduals("F1/",5)
source("analysis.R")
plotResiduals("F1/",5)
resid
mean
means
expected <- rep(means, each=nrow(resid))
expected
expected <- rep(means[1], each=nrow(resid))
expected
means
as.numeric(means)
means <- as.numeric(means)
expected <- rep(means, each=nrow(resid))
expected
resid
residuals
convertToVector(resid)
plot(expected, residuals)
source("analysis.R")
plotIndCheck("Accuracy/", 1)
source("analysis.R")
plotIndCheck("Accuracy/", 1)
source("analysis.R")
plotIndCheck("Accuracy/", 1)
plotIndCheck("Accuracy/", 2)
plotIndCheck("Accuracy/", 3)
plotIndCheck("Accuracy/", 4)
plotIndCheck("Accuracy/", 5)
plotIndCheck("Accuracy/", 1)
plotIndCheck("Accuracy/", 1, "PC5 Residuals")
plotIndCheck("Accuracy/", 1, "PC5 Accuracy Residuals")
plotIndCheck("F1/", 1, "PC5 Accuracy Residuals")
plotIndCheck("F1/", 5, "PC5 Accuracy Residuals")
plotIndCheck("F1/", 4, "PC5 Accuracy Residuals")
plotIndCheck("F1/", 3, "PC5 Accuracy Residuals")
plotIndCheck("F1/", 2, "PC5 Accuracy Residuals")
plotIndCheck("F1/", 1, "PC5 Accuracy Residuals")
plotIndCheck("F1/", 5, "PC5 Accuracy Residuals")
plotIndCheck("F1/", 4, "PC5 Accuracy Residuals")
plotIndCheck("F1/", 5, "PC5 Accuracy Residuals")
plotIndCheck("F1/", 5, "PC5 F1 Residuals")
fit = lm()
fit = lm(df)
fit
anova(fit)
PC1
rep(1:6, each=10)
group <- rep(1:6, each=10)
PC1[1]
y <- convertToVector(PC1)
y
data = data.frame(y = y, group = factor(group))
data
fit = lm(y ~ group, data)
anova(fit)
source("analysis.R")
fitModel("Accuracy/", 1)
fit <- fitModel("Accuracy/", 1)
anova(fit)
aov(fit)
summary(aov(fit))
TukeyHSD(aov(fit))
aov(fit)
TukeyHSD(fit)
response <- convertToVector(df)
alternative <- rep(1:6, each=10)
aov(response ~ factor(alternative))
aov.fit <- aov(response ~ factor(alternative))
TukeyHSD(aov.fit)
source("analysis.R")
tukeyTest("Accuracy/" 1)
tukeyTest("Accuracy/", 1)
source("analysis.R")
tukeyTest("Accuracy/", 1)
data <- tukeyTest("Accuracy/", 1)
aov.fit <- aov(data$response ~ data$alternative)
data$alternative
data$response
source("analysis.R")
tukeyTest("Accuracy/", 1)
source("analysis.R")
plotAnovaTest("Accuracy/", 1)
plotAnovaTest("Accuracy/", 1)
plotAnovaTest("Accuracy/", 1)
source("analysis.R")
anovaTest("Accuracy/", 1)
anovaTest("Accuracy/", 2)
anovaTest("Accuracy/", 3)
anovaTest("Accuracy/", 4)
anovaTest("Accuracy/", 5)
anovaTest("F1/", 1)
anovaTest("F1/", 2)
anovaTest("F1/", 3)
anovaTest("F1/", 4)
anovaTest("F1/", 5)
tukeyTest("Accuracy/", 1)
test <- tukeyTest("Accuracy/", 1)
test
test[1]
test[1][1]
test[1][1][1]
test
test[[1]]
test[[1]][c(1,4)]
test[[1]][,c(1,4)]
test[[1]][,4]
source("analysis.R")
tukeyTest("Accuracy/", 1)
source("analysis.R")
tukeyTest("Accuracy/", 1)
source("analysis.R")
tukeyTest("Accuracy/", 1)
tukeyTest("Accuracy/", 2)
tukeyTest("F1/", 2)
source("analysis.R")
tukeyTest("Accuracy/", 2)
source("analysis.R")
tukeyTest("Accuracy/", 2)
source("analysis.R")
tukeyTest("Accuracy/", 2)
source("analysis.R")
tukeyTest("Accuracy/", 2)
source("analysis.R")
tukeyTest("Accuracy/", 2)
tukeyTest("Accuracy/", 1)
source("analysis.R")
tukeyTest("Accuracy/", 1)
source("analysis.R")
tukeyTest("Accuracy/", 1)
source("analysis.R")
tukeyTest("Accuracy/", 1)
source("analysis.R")
tukeyTest("Accuracy/", 1)
tukeyTest("Accuracy/", 3)
tukeyTest("Accuracy/", 4)
tukeyTest("Accuracy/", 5)
tukeyTest("F1/", 1)
tukeyTest("F1/", 2)
tukeyTest("F1/", 3)
tukeyTest("F1/", 4)
tukeyTest("F1/", 5)
mean(data)
data
getData("Accuracy/")
PC
PCData
mean(PCData[[1]])
PCData[[1]]
lapply(PCData[[1]], mean)
mean(PCData[[1]][1])
mean(PCData[[1]]$NaiveBayes)
lapply(PCData[[1]], mean)
PCData2 <- getData("F1/")
lapply(PCData[[2]], mean)
as.numeric(lapply(PCData[[2]], mean))
cat(as.numeric(lapply(PCData[[2]], mean)), sep="\n")
cat(as.numeric(lapply(PCData[[3]], mean)), sep="\n")
cat(as.numeric(lapply(PCData[[4]], mean)), sep="\n")
cat(as.numeric(lapply(PCData[[5]], mean)), sep="\n")
cat(as.numeric(lapply(PCData2[[5]], mean)), sep="\n")
PCData2
PCData2 <- getPCData("F1/")
cat(as.numeric(lapply(PCData2[[5]], mean)), sep="\n")
cat(as.numeric(lapply(PCData2[[4]], mean)), sep="\n")
cat(as.numeric(lapply(PCData2[[3]], mean)), sep="\n")
cat(as.numeric(lapply(PCData2[[2]], mean)), sep="\n")
cat(as.numeric(lapply(PCData2[[1]], mean)), sep="\n")
0.8790284
0.90342864
0.91711522
0.92266538
0.91656084
0.32172642
source("analysis.R")
plotMeanAccuracy()
source("analysis.R")
plotMeanAccuracy()
source("analysis.R")
plotMeanAccuracy()
source("analysis.R")
plotMeanAccuracy()
source("analysis.R")
plotMeanAccuracy()
source("analysis.R")
plotMeanAccuracy()
source("analysis.R")
plotMeanAccuracy()
source("analysis.R")
plotMeanAccuracy()
mtcars
table(mtcars$gear)
table(c(1,2,3,4), row.names = c(5,10,15,20))
test <- c(1,2,3,4)
names(test) <- c("A","B","C","D")
test
barplot(test)
source("analysis.R")
plotMeanAccuracy()
source("analysis.R")
plotMeanAccuracy()
source("analysis.R")
plotMeanAccuracy()
table(mtcars$vs, mtcars$gear)
test2 <- test
table(test, test2)
tes
test
test2 <- c(8,9,10,11)
matrix(c(test,test2),byrow=TRUE)
matrix(c(test,test2),nrow=2,byrow=TRUE)
source("analysis.R")
plotMeanAccuracy()
source("analysis.R")
plotMeanAccuracy()
source("analysis.R")
plotMeanAccuracy()
source("analysis.R")
plotMeanAccuracy()
table(mtcars$vs, mtcars$gear)
plotMeanAccuracy()
source("analysis.R")
plotMeanAccuracy()
source("analysis.R")
plotMeanAccuracy()
source("analysis.R")
plotMeanAccuracy()
source("analysis.R")
plotMeanAccuracy()
